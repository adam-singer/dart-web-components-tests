// Auto-generated from login_form.html.
// DO NOT EDIT.

library x_login;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

import 'dart:html';

class LoginComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated_html.FormElement __loginForm;
  
  autogenerated_html.EventListener __listener__loginForm_submit_1;
  
  autogenerated_html.InputElement __e1;
  
  autogenerated_html.EventListener __listener__e1_input_2;
  
  List<autogenerated.WatcherDisposer> __stoppers3;
  
  autogenerated_html.InputElement __e2;
  
  autogenerated_html.EventListener __listener__e2_input_4;
  
  autogenerated_html.InputElement __e3;
  
  autogenerated_html.EventListener __listener__e3_click_5;
  
  autogenerated_html.SpanElement __e5;
  
  var __binding4;
  
  LoginComponent.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    _root.innerHtml = '''
    
    <form id="loginForm">
    <div>
    <h1>Login :</h1>
    <label for="loginName">Login name</label>
    <input type="text" required="required" id="__e-1">
    <label>Password</label>
    <input type="password" required="required" id="__e-2">
    <input type="submit" value="Login">
    <input type="button" value="Cancel" id="__e-3">
    <span id="__e-5"></span>
    </div>
    </form>
    ''';
    __loginForm = _root.query('#loginForm');
    __e1 = __loginForm.query('#__e-1');
    __stoppers3 = [];
    __e2 = __loginForm.query('#__e-2');
    __e3 = __loginForm.query('#__e-3');
    __e5 = __loginForm.query('#__e-5');
    __binding4 = new autogenerated_html.Text('');
    __e5.nodes.add(__binding4);
    
  }
  
  void inserted_autogenerated() {
    __listener__loginForm_submit_1 = ($event) {
      doLogin($event);
      autogenerated.dispatch();
    };
    __loginForm.on.submit.add(__listener__loginForm_submit_1);
    
    __listener__e1_input_2 = ($event) {
      loginId = __e1.value;
      autogenerated.dispatch();
    };
    __e1.on.input.add(__listener__e1_input_2);
    
    __stoppers3.add(autogenerated.watchAndInvoke(() => loginId, (__e) { __e1.value = __e.newValue; }));
    
    __listener__e2_input_4 = ($event) {
      pwd = __e2.value;
      autogenerated.dispatch();
    };
    __e2.on.input.add(__listener__e2_input_4);
    
    __stoppers3.add(autogenerated.watchAndInvoke(() => pwd, (__e) { __e2.value = __e.newValue; }));
    
    __listener__e3_click_5 = ($event) {
      doCancel($event);
      autogenerated.dispatch();
    };
    __e3.on.click.add(__listener__e3_click_5);
    
    __stoppers3.add(autogenerated.watchAndInvoke(() => '${errorMessage}', (__e) {
      __binding4 = autogenerated.updateBinding(errorMessage, __binding4, __e.newValue);
    }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    __loginForm.on.submit.remove(__listener__loginForm_submit_1);
    __listener__loginForm_submit_1 = null;
    
    __loginForm = null;
    
    (__stoppers3..forEach((s) => s())).clear();
    
    __e1.on.input.remove(__listener__e1_input_2);
    __listener__e1_input_2 = null;
    
    __e1 = null;
    
    __e2.on.input.remove(__listener__e2_input_4);
    __listener__e2_input_4 = null;
    
    __e2 = null;
    
    __e3.on.click.remove(__listener__e3_click_5);
    __listener__e3_click_5 = null;
    
    __e3 = null;
    
    __e5 = null;
    
    __binding4 = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  String errorMessage="";
  String loginId='';
  String pwd='';
  
  void doLogin(Event e) {
    print("in do login");
    e.preventDefault();
    print(loginId);
    print(pwd);
  }
  
  void doCancel(Event e) {
    e.preventDefault();
    errorMessage=' ';
    style.display='none';
  }
}

