// Auto-generated from clock.html.
// DO NOT EDIT.

library x_clock;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

import 'package:web_ui/watcher.dart' as watchers;

import 'dart:isolate';

class Clock extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated_html.SpanElement __e2;
  
  var __binding1;
  
  List<autogenerated.WatcherDisposer> __stoppers1;
  
  Clock.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    _root.innerHtml = '''
    
    <div>
    <span id="__e-2"></span>
    </div>
    ''';
    __e2 = _root.query('#__e-2');
    __binding1 = new autogenerated_html.Text('');
    __stoppers1 = [];
    __e2.nodes.add(new autogenerated_html.Text('The current time is '));
    __e2.nodes.add(__binding1);
    
  }
  
  void inserted_autogenerated() {
    __stoppers1.add(autogenerated.watchAndInvoke(() => '${ time }', (__e) {
      __binding1 = autogenerated.updateBinding( time , __binding1, __e.newValue);
    }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    __e2 = null;
    
    (__stoppers1..forEach((s) => s())).clear();
    
    __binding1 = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  Date time = new Date.now();
  Timer timer;
  
  inserted() {
    timer = new Timer.repeating(1000, (t) {
      time = new Date.now();
      watchers.dispatch();
    });
  }
  
  removed() {
    timer.cancel();
  }
}

