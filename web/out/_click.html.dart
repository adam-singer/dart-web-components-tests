// Auto-generated from click.html.
// DO NOT EDIT.

library x_click_counter;

import 'dart:html' as autogenerated;
import 'package:web_components/watcher.dart' as autogenerated;

import 'package:web_components/web_component.dart';

class CounterComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.ButtonElement __e0;
  
  autogenerated.EventListener _listener__e0_click_1;
  
  autogenerated.SpanElement __e1;
  
  autogenerated.WatcherDisposer _stopWatcher__e1_2;
  
  CounterComponent.forElement(e) : super.forElement(e) {
    _root = createShadowRoot();
  }
  
  void created_autogenerated() {
    _root.innerHTML = '''
    
    <div>
    <button id="__e-0">Click me</button>
    <span id="__e-1"></span>
    </div>
    ''';
    __e0 = _root.query('#__e-0');
    
    __e1 = _root.query('#__e-1');
    
  }
  
  void inserted_autogenerated() {
    _listener__e0_click_1 = (e) {
      increment(e);
      autogenerated.dispatch();
    };
    __e0.on.click.add(_listener__e0_click_1);
    
    _stopWatcher__e1_2 = autogenerated.watchAndInvoke(() => count, (e) {
      __e1.innerHTML = '(click count: ${count})';
    });
    
  }
  
  void removed_autogenerated() {
    __e0.on.click.remove(_listener__e0_click_1);
    _listener__e0_click_1 = null;
    
    __e0 = null;
    
    _stopWatcher__e1_2();
    
    __e1 = null;
    
  }
  
  /** Original code from the component. */
  
  int count = 0;
  void increment(e) { count++; }
}

