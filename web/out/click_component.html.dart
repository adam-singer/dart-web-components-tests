// Auto-generated from click_component.html.
// DO NOT EDIT.

library x_click_counter;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import 'package:web_ui/web_ui.dart';

class CounterComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated_html.ButtonElement __e1;
  
  autogenerated_html.EventListener __listener__e1_click_1;
  
  autogenerated_html.SpanElement __e3;
  
  var __binding2;
  
  List<autogenerated.WatcherDisposer> __stoppers2;
  
  CounterComponent.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    _root.innerHtml = '''
    
    <div>
    <button id="__e-1">Click me</button>
    <span id="__e-3"></span>
    </div>
    ''';
    __e1 = _root.query('#__e-1');
    __e3 = _root.query('#__e-3');
    __binding2 = new autogenerated_html.Text('');
    __stoppers2 = [];
    __e3.nodes.add(new autogenerated_html.Text('(click count: '));
    __e3.nodes.add(__binding2);
    __e3.nodes.add(new autogenerated_html.Text(')'));
    
  }
  
  void inserted_autogenerated() {
    __listener__e1_click_1 = ($event) {
      increment();
      autogenerated.dispatch();
    };
    __e1.on.click.add(__listener__e1_click_1);
    
    __stoppers2.add(autogenerated.watchAndInvoke(() => '${count}', (__e) {
      __binding2 = autogenerated.updateBinding(count, __binding2, __e.newValue);
    }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    __e1.on.click.remove(__listener__e1_click_1);
    __listener__e1_click_1 = null;
    
    __e1 = null;
    
    __e3 = null;
    
    (__stoppers2..forEach((s) => s())).clear();
    
    __binding2 = null;
    
  }
  
  void composeChildren() {
    super.composeChildren();
    if (_root is! autogenerated_html.ShadowRoot) _root = this;
  }
  
  /** Original code from the component. */
  
  int count = 0;
  void increment() { count++; }
}

