// Auto-generated from TodoItemComponent.html.
// DO NOT EDIT.

library x_todo_item;

import 'dart:html' as autogenerated;
import 'package:web_components/web_components.dart' as autogenerated;

import 'package:web_components/web_components.dart';

import '../models.dart';

class TodoItemComponent extends WebComponent {
  
  /** Autogenerated from the template. */
  
  /**
  * Shadow root for this component. We use 'var' to allow simulating shadow DOM
  * on browsers that don't support this feature.
  */
  var _root;
  autogenerated.LabelElement __e3;
  
  List<autogenerated.WatcherDisposer> _stoppers1;
  
  autogenerated.InputElement __e0;
  
  autogenerated.EventListener _listener__e0_change_2;
  
  autogenerated.SpanElement __e2;
  
  var _binding1;
  
  TodoItemComponent.forElement(e) : super.forElement(e);
  
  void created_autogenerated() {
    _root = createShadowRoot();
    
    if (_root is autogenerated.ShadowRoot) _root.applyAuthorStyles = true;
    
    _root.innerHTML = '''
    
    <label class="" id="__e-3">
    <input type="checkbox" id="__e-0">
    <span id="__e-2"></span>
    </label>
    ''';
    __e3 = _root.query('#__e-3');
    __e0 = __e3.query('#__e-0');
    __e2 = __e3.query('#__e-2');
    _binding1 = autogenerated.nodeForBinding( todo.actionItem );
    __e2.nodes.add(_binding1);
    _stoppers1 = [];
    
  }
  
  void inserted_autogenerated() {
    _stoppers1.add(autogenerated.bindCssClasses(__e3, () =>  completeClass ));
    
    _listener__e0_change_2 = ($event) {
      toggle();
      autogenerated.dispatch();
    };
    __e0.on.change.add(_listener__e0_change_2);
    
    _stoppers1.add(autogenerated.watchAndInvoke(() =>  todo.actionItem , (__e) { _binding1 = autogenerated.updateBinding(__e.newValue, _binding1); }));
    
  }
  
  void removed_autogenerated() {
    _root = null;
    
    (_stoppers1..forEach((s) => s())).clear();
    
    __e3 = null;
    
    __e0.on.change.remove(_listener__e0_change_2);
    _listener__e0_change_2 = null;
    
    __e0 = null;
    
    __e2 = null;
    
    _binding1 = null;
    
  }
  
  /** Original code from the component. */
  
  TodoItem todo;
  
  toggle() => todo.toggle();
  
  String get completeClass => todo.complete ? 'completed' : '';
}

