// Auto-generated from LudicrouslySimpleTodo.html.
// DO NOT EDIT.

library LudicrouslySimpleTodo_html;

import 'dart:html' as autogenerated_html;
import 'dart:web_audio' as autogenerated_audio;
import 'dart:svg' as autogenerated_svg;
import 'package:web_ui/web_ui.dart' as autogenerated;

import '../models.dart';

import 'dart:html';

import 'TodoItemComponent.dart';


// Original code
List<TodoItem> todoItems = new List<TodoItem>();

createNewTodo() {
  var newTodo = query('#new-todo') as InputElement;
  todoItems.add(new TodoItem(newTodo.value));
  newTodo.value = '';
}

main() { }


// Additional generated code
/** Create the views and bind them to models. */
void init_autogenerated() {
  var _root = autogenerated_html.document.body;
  autogenerated_html.InputElement __newTodo;
  
  autogenerated_html.ButtonElement __e0;
  
  autogenerated_html.EventListener __listener__e0_click_1;
  
  autogenerated_html.UListElement __todos;
  
  autogenerated_html.UnknownElement __e3;
  
  List<autogenerated.WatcherDisposer> __stoppers2;
  
  List<Function> _removeChild__e3 = [];
  
  autogenerated_html.Node _endPosition__e3;
  


  // Initialize fields.
  __newTodo = _root.query('#new-todo');
  __e0 = _root.query('#__e-0');
  __todos = _root.query('#todos');
  __e3 = __todos.query('#__e-3');
  __stoppers2 = [];
  

  // Attach model to views.
  __listener__e0_click_1 = ($event) {
    createNewTodo();
    autogenerated.dispatch();
  };
  __e0.on.click.add(__listener__e0_click_1);
  
  _endPosition__e3 = __e3;
  
  __stoppers2.add(autogenerated.watchAndInvoke(() => todoItems, (_) {
    for (var remover in _removeChild__e3) remover();
    _removeChild__e3.clear();
    
    _endPosition__e3 = autogenerated.removeNodes(__e3, _endPosition__e3);
    
    var __insert___e3 = __e3.nextNode;
    
    for (var x in todoItems) {
      
      autogenerated_html.LIElement __e2;
      autogenerated_html.UnknownElement __e1;
      List<autogenerated.WatcherDisposer> __stoppers3_1;
      
      __e2 = new autogenerated_html.Element.html('<li><x-todo-item id="__e-1"></x-todo-item></li>');
      __e1 = __e2.query('#__e-1');
      __stoppers3_1 = [];
      new TodoItemComponent.forElement(__e1)
      ..created_autogenerated()
      ..created()
      ..composeChildren();
      
      autogenerated.insertAllBefore(__e3.parent, __insert___e3,
      
      [new autogenerated_html.Text('\n        '), __e2, _endPosition__e3 = new autogenerated_html.Text('\n      ')]);
      
      __stoppers3_1.add(autogenerated.watchAndInvoke(() => x, (__e) { __e1.xtag.todo = __e.newValue; }));
      __stoppers3_1.add(autogenerated.watchAndInvoke(
      () => __e1.xtag.todo,
      (__e) { x = __e.newValue; }));
      __e1.xtag..inserted()
      ..inserted_autogenerated();
      
      _removeChild__e3.add(() {
        
        __e2 = null;
        __e1.xtag..removed_autogenerated()
        ..removed();
        (__stoppers3_1..forEach((s) => s())).clear();
        __e1 = null;
        
      });
    }
  }));
  

}
